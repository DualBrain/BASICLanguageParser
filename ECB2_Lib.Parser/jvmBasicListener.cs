//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Stephen\source\repos\ECB2_Lib\ECB2_Lib.Parser.Grammar\jvmBasic.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ECB2_Lib.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="jvmBasicParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IjvmBasicListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] jvmBasicParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] jvmBasicParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] jvmBasicParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] jvmBasicParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.amperoper"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmperoper([NotNull] jvmBasicParser.AmperoperContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.amperoper"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmperoper([NotNull] jvmBasicParser.AmperoperContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.linenumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinenumber([NotNull] jvmBasicParser.LinenumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.linenumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinenumber([NotNull] jvmBasicParser.LinenumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.amprstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmprstmt([NotNull] jvmBasicParser.AmprstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.amprstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmprstmt([NotNull] jvmBasicParser.AmprstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] jvmBasicParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] jvmBasicParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.vardecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVardecl([NotNull] jvmBasicParser.VardeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.vardecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVardecl([NotNull] jvmBasicParser.VardeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.printstmt1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintstmt1([NotNull] jvmBasicParser.Printstmt1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.printstmt1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintstmt1([NotNull] jvmBasicParser.Printstmt1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.printlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintlist([NotNull] jvmBasicParser.PrintlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.printlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintlist([NotNull] jvmBasicParser.PrintlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.getstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetstmt([NotNull] jvmBasicParser.GetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.getstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetstmt([NotNull] jvmBasicParser.GetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.letstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetstmt([NotNull] jvmBasicParser.LetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.letstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetstmt([NotNull] jvmBasicParser.LetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.variableassignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableassignment([NotNull] jvmBasicParser.VariableassignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.variableassignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableassignment([NotNull] jvmBasicParser.VariableassignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] jvmBasicParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] jvmBasicParser.RelopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.neq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeq([NotNull] jvmBasicParser.NeqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.neq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeq([NotNull] jvmBasicParser.NeqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfstmt([NotNull] jvmBasicParser.IfstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfstmt([NotNull] jvmBasicParser.IfstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.forstmt1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForstmt1([NotNull] jvmBasicParser.Forstmt1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.forstmt1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForstmt1([NotNull] jvmBasicParser.Forstmt1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.forstmt2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForstmt2([NotNull] jvmBasicParser.Forstmt2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.forstmt2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForstmt2([NotNull] jvmBasicParser.Forstmt2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.nextstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNextstmt([NotNull] jvmBasicParser.NextstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.nextstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNextstmt([NotNull] jvmBasicParser.NextstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.inputstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputstmt([NotNull] jvmBasicParser.InputstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.inputstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputstmt([NotNull] jvmBasicParser.InputstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.readstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadstmt([NotNull] jvmBasicParser.ReadstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.readstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadstmt([NotNull] jvmBasicParser.ReadstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.dimstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDimstmt([NotNull] jvmBasicParser.DimstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.dimstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDimstmt([NotNull] jvmBasicParser.DimstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.gotostmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotostmt([NotNull] jvmBasicParser.GotostmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.gotostmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotostmt([NotNull] jvmBasicParser.GotostmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.gosubstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGosubstmt([NotNull] jvmBasicParser.GosubstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.gosubstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGosubstmt([NotNull] jvmBasicParser.GosubstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.pokestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPokestmt([NotNull] jvmBasicParser.PokestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.pokestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPokestmt([NotNull] jvmBasicParser.PokestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.callstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallstmt([NotNull] jvmBasicParser.CallstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.callstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallstmt([NotNull] jvmBasicParser.CallstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.hplotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHplotstmt([NotNull] jvmBasicParser.HplotstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.hplotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHplotstmt([NotNull] jvmBasicParser.HplotstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.vplotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVplotstmt([NotNull] jvmBasicParser.VplotstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.vplotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVplotstmt([NotNull] jvmBasicParser.VplotstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.plotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlotstmt([NotNull] jvmBasicParser.PlotstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.plotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlotstmt([NotNull] jvmBasicParser.PlotstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.ongotostmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOngotostmt([NotNull] jvmBasicParser.OngotostmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.ongotostmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOngotostmt([NotNull] jvmBasicParser.OngotostmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.ongosubstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOngosubstmt([NotNull] jvmBasicParser.OngosubstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.ongosubstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOngosubstmt([NotNull] jvmBasicParser.OngosubstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.vtabstmnt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVtabstmnt([NotNull] jvmBasicParser.VtabstmntContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.vtabstmnt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVtabstmnt([NotNull] jvmBasicParser.VtabstmntContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.htabstmnt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHtabstmnt([NotNull] jvmBasicParser.HtabstmntContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.htabstmnt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHtabstmnt([NotNull] jvmBasicParser.HtabstmntContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.himemstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHimemstmt([NotNull] jvmBasicParser.HimemstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.himemstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHimemstmt([NotNull] jvmBasicParser.HimemstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.lomemstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLomemstmt([NotNull] jvmBasicParser.LomemstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.lomemstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLomemstmt([NotNull] jvmBasicParser.LomemstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.datastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatastmt([NotNull] jvmBasicParser.DatastmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.datastmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatastmt([NotNull] jvmBasicParser.DatastmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.datum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatum([NotNull] jvmBasicParser.DatumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.datum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatum([NotNull] jvmBasicParser.DatumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.waitstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWaitstmt([NotNull] jvmBasicParser.WaitstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.waitstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWaitstmt([NotNull] jvmBasicParser.WaitstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.xdrawstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXdrawstmt([NotNull] jvmBasicParser.XdrawstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.xdrawstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXdrawstmt([NotNull] jvmBasicParser.XdrawstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.drawstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawstmt([NotNull] jvmBasicParser.DrawstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.drawstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawstmt([NotNull] jvmBasicParser.DrawstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.defstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefstmt([NotNull] jvmBasicParser.DefstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.defstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefstmt([NotNull] jvmBasicParser.DefstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.tabstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTabstmt([NotNull] jvmBasicParser.TabstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.tabstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTabstmt([NotNull] jvmBasicParser.TabstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.speedstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpeedstmt([NotNull] jvmBasicParser.SpeedstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.speedstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpeedstmt([NotNull] jvmBasicParser.SpeedstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.rotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRotstmt([NotNull] jvmBasicParser.RotstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.rotstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRotstmt([NotNull] jvmBasicParser.RotstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.scalestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalestmt([NotNull] jvmBasicParser.ScalestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.scalestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalestmt([NotNull] jvmBasicParser.ScalestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.colorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColorstmt([NotNull] jvmBasicParser.ColorstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.colorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColorstmt([NotNull] jvmBasicParser.ColorstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.hcolorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHcolorstmt([NotNull] jvmBasicParser.HcolorstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.hcolorstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHcolorstmt([NotNull] jvmBasicParser.HcolorstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.hlinstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHlinstmt([NotNull] jvmBasicParser.HlinstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.hlinstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHlinstmt([NotNull] jvmBasicParser.HlinstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.vlinstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVlinstmt([NotNull] jvmBasicParser.VlinstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.vlinstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVlinstmt([NotNull] jvmBasicParser.VlinstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.onerrstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnerrstmt([NotNull] jvmBasicParser.OnerrstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.onerrstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnerrstmt([NotNull] jvmBasicParser.OnerrstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.prstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrstmt([NotNull] jvmBasicParser.PrstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.prstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrstmt([NotNull] jvmBasicParser.PrstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.instmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstmt([NotNull] jvmBasicParser.InstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.instmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstmt([NotNull] jvmBasicParser.InstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.storestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStorestmt([NotNull] jvmBasicParser.StorestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.storestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStorestmt([NotNull] jvmBasicParser.StorestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.recallstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecallstmt([NotNull] jvmBasicParser.RecallstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.recallstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecallstmt([NotNull] jvmBasicParser.RecallstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.liststmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListstmt([NotNull] jvmBasicParser.ListstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.liststmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListstmt([NotNull] jvmBasicParser.ListstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.popstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPopstmt([NotNull] jvmBasicParser.PopstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.popstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPopstmt([NotNull] jvmBasicParser.PopstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.amptstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmptstmt([NotNull] jvmBasicParser.AmptstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.amptstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmptstmt([NotNull] jvmBasicParser.AmptstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.includestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncludestmt([NotNull] jvmBasicParser.IncludestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.includestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncludestmt([NotNull] jvmBasicParser.IncludestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.endstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndstmt([NotNull] jvmBasicParser.EndstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.endstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndstmt([NotNull] jvmBasicParser.EndstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.returnstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnstmt([NotNull] jvmBasicParser.ReturnstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.returnstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnstmt([NotNull] jvmBasicParser.ReturnstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.restorestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRestorestmt([NotNull] jvmBasicParser.RestorestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.restorestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRestorestmt([NotNull] jvmBasicParser.RestorestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] jvmBasicParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] jvmBasicParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.func_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_([NotNull] jvmBasicParser.Func_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.func_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_([NotNull] jvmBasicParser.Func_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.signExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignExpression([NotNull] jvmBasicParser.SignExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.signExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignExpression([NotNull] jvmBasicParser.SignExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.exponentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponentExpression([NotNull] jvmBasicParser.ExponentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.exponentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponentExpression([NotNull] jvmBasicParser.ExponentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplyingExpression([NotNull] jvmBasicParser.MultiplyingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplyingExpression([NotNull] jvmBasicParser.MultiplyingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.addingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddingExpression([NotNull] jvmBasicParser.AddingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.addingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddingExpression([NotNull] jvmBasicParser.AddingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] jvmBasicParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] jvmBasicParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] jvmBasicParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] jvmBasicParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.var_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_([NotNull] jvmBasicParser.Var_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.var_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_([NotNull] jvmBasicParser.Var_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.varname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarname([NotNull] jvmBasicParser.VarnameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.varname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarname([NotNull] jvmBasicParser.VarnameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.varsuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarsuffix([NotNull] jvmBasicParser.VarsuffixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.varsuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarsuffix([NotNull] jvmBasicParser.VarsuffixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.varlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarlist([NotNull] jvmBasicParser.VarlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.varlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarlist([NotNull] jvmBasicParser.VarlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.exprlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprlist([NotNull] jvmBasicParser.ExprlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.exprlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprlist([NotNull] jvmBasicParser.ExprlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.sqrfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqrfunc([NotNull] jvmBasicParser.SqrfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.sqrfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqrfunc([NotNull] jvmBasicParser.SqrfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.chrfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChrfunc([NotNull] jvmBasicParser.ChrfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.chrfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChrfunc([NotNull] jvmBasicParser.ChrfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.lenfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLenfunc([NotNull] jvmBasicParser.LenfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.lenfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLenfunc([NotNull] jvmBasicParser.LenfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.ascfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAscfunc([NotNull] jvmBasicParser.AscfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.ascfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAscfunc([NotNull] jvmBasicParser.AscfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.midfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMidfunc([NotNull] jvmBasicParser.MidfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.midfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMidfunc([NotNull] jvmBasicParser.MidfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.pdlfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPdlfunc([NotNull] jvmBasicParser.PdlfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.pdlfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPdlfunc([NotNull] jvmBasicParser.PdlfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.peekfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPeekfunc([NotNull] jvmBasicParser.PeekfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.peekfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPeekfunc([NotNull] jvmBasicParser.PeekfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.intfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntfunc([NotNull] jvmBasicParser.IntfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.intfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntfunc([NotNull] jvmBasicParser.IntfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.spcfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpcfunc([NotNull] jvmBasicParser.SpcfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.spcfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpcfunc([NotNull] jvmBasicParser.SpcfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.frefunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrefunc([NotNull] jvmBasicParser.FrefuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.frefunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrefunc([NotNull] jvmBasicParser.FrefuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.posfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosfunc([NotNull] jvmBasicParser.PosfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.posfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosfunc([NotNull] jvmBasicParser.PosfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.usrfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsrfunc([NotNull] jvmBasicParser.UsrfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.usrfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsrfunc([NotNull] jvmBasicParser.UsrfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.leftfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftfunc([NotNull] jvmBasicParser.LeftfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.leftfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftfunc([NotNull] jvmBasicParser.LeftfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.rightfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightfunc([NotNull] jvmBasicParser.RightfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.rightfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightfunc([NotNull] jvmBasicParser.RightfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.strfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrfunc([NotNull] jvmBasicParser.StrfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.strfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrfunc([NotNull] jvmBasicParser.StrfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.fnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFnfunc([NotNull] jvmBasicParser.FnfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.fnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFnfunc([NotNull] jvmBasicParser.FnfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.valfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValfunc([NotNull] jvmBasicParser.ValfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.valfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValfunc([NotNull] jvmBasicParser.ValfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.scrnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScrnfunc([NotNull] jvmBasicParser.ScrnfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.scrnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScrnfunc([NotNull] jvmBasicParser.ScrnfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.sinfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSinfunc([NotNull] jvmBasicParser.SinfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.sinfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSinfunc([NotNull] jvmBasicParser.SinfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.cosfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCosfunc([NotNull] jvmBasicParser.CosfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.cosfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCosfunc([NotNull] jvmBasicParser.CosfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.tanfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTanfunc([NotNull] jvmBasicParser.TanfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.tanfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTanfunc([NotNull] jvmBasicParser.TanfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.atnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtnfunc([NotNull] jvmBasicParser.AtnfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.atnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtnfunc([NotNull] jvmBasicParser.AtnfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.rndfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRndfunc([NotNull] jvmBasicParser.RndfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.rndfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRndfunc([NotNull] jvmBasicParser.RndfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.sgnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSgnfunc([NotNull] jvmBasicParser.SgnfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.sgnfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSgnfunc([NotNull] jvmBasicParser.SgnfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.expfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpfunc([NotNull] jvmBasicParser.ExpfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.expfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpfunc([NotNull] jvmBasicParser.ExpfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.logfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogfunc([NotNull] jvmBasicParser.LogfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.logfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogfunc([NotNull] jvmBasicParser.LogfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.absfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbsfunc([NotNull] jvmBasicParser.AbsfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.absfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbsfunc([NotNull] jvmBasicParser.AbsfuncContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="jvmBasicParser.tabfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTabfunc([NotNull] jvmBasicParser.TabfuncContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="jvmBasicParser.tabfunc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTabfunc([NotNull] jvmBasicParser.TabfuncContext context);
}
} // namespace ECB2_Lib.Parser
